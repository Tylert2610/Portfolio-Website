---
alwaysApply: true
---

- Always run `npm run lint` and `npm run build` before suggesting commits
- Follow TypeScript best practices: use strict typing, avoid `any`, prefer interfaces over types
- Implement proper error boundaries and loading states in React components
- Use semantic HTML elements and ensure accessibility (ARIA labels, keyboard navigation)
- Prefer functional components with hooks over class components
- Suggest unit tests for new components and functions
- Ensure all new code follows the existing project structure and naming conventions
- When fixing bugs, create a test case to prevent regression
- Always validate that changes work across different screen sizes
- Optimize images and assets before adding them to the project
- Use React.memo() for expensive components that don't need frequent re-renders
- Implement lazy loading for components that aren't immediately visible
- Suggest performance improvements when code could be optimized
- Only use code comments when they explain a relatively non-intuitive code path or when specifically asked to explain certain logic
- Prioritize code readability where possible
- Shoot for O(n) time and space complexities or better

---
